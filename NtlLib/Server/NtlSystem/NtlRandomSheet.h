#include <stdint.h>
//#include <IntSafe.h>
#define LODWORD(_qw)    ((DWORD)(_qw))
#define HIDWORD(_qw)    ((DWORD)(((_qw) >> 32) & 0xffffffff))

class CNtlRandomSheet
{
public:
	CNtlRandomSheet();
	CNtlRandomSheet(uint64_t seed);
	~CNtlRandomSheet();

	uint64_t GetSheet(int sheetid);

protected:
	enum { TABLE_SIZE = 512, SHEET_SIZE = 61, };

	// This single seed is used to initialize a simple generator that provides
	// the seeds to the real generator.
	uint64_t state;

	uint64_t table[SHEET_SIZE * TABLE_SIZE];

	void GenerateSeeds();

	// Return a new number generated by a simple generator that depends only on state.
	uint64_t GenerateSimple();
};

class CNtlRandomChecksum
{
public:
	CNtlRandomChecksum();
	CNtlRandomChecksum(uint64_t seed);
	~CNtlRandomChecksum();

	uint64_t GetValue(int position);

protected:
	enum { TABLE_SIZE = 569, };

	// This single seed is used to initialize a simple generator that provides
	// the seeds to the real generator.
	uint64_t state;

	uint64_t table[TABLE_SIZE];

	void GenerateSeeds();

	// Return a new number generated by a simple generator that depends only on state.
	uint64_t GenerateSimple();
};