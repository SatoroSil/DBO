#include "StdAfx.h"
#include "NtlPacketTG.h"


const char * s_packetName_TG[] =
{
	DECLARE_PACKET_NAME( TG_HEARTBEAT ),
	DECLARE_PACKET_NAME( TG_USER_ENTER_GAME_ACK ),
	DECLARE_PACKET_NAME( TG_USER_LEAVE_GAME_ACK ),
	DECLARE_PACKET_NAME( TG_USER_AUTH_KEY_CREATED_ACK ),

	DECLARE_PACKET_NAME( TG_PARTY_CREATED_ACK ),
	DECLARE_PACKET_NAME( TG_PARTY_DISBANDED_ACK ),
	DECLARE_PACKET_NAME( TG_PARTY_MEMBER_JOINED_ACK ),
	DECLARE_PACKET_NAME( TG_PARTY_MEMBER_LEFT_ACK ),
	DECLARE_PACKET_NAME( TG_PARTY_LEADER_CHANGED_ACK ),

	DECLARE_PACKET_NAME( TG_GUILD_CREATE_RES ),
	DECLARE_PACKET_NAME( TG_GUILD_INVITE_RES ),
	DECLARE_PACKET_NAME( TG_GUILD_CREATED_NFY ),
	DECLARE_PACKET_NAME( TG_GUILD_DESTROYED_NFY ),
	DECLARE_PACKET_NAME( TG_GUILD_INFO_REFRESHED_NFY ),
	DECLARE_PACKET_NAME( TG_GUILD_PLAYER_GUILDID_CHANGED_NFY ),
	DECLARE_PACKET_NAME( TG_GUILD_FUNCTION_ADD_RES ),
	DECLARE_PACKET_NAME( TG_GUILD_GIVE_ZENNY_RES ),
	DECLARE_PACKET_NAME( TG_GUILD_BANK_START_RES ),
	DECLARE_PACKET_NAME( TG_GUILD_CREATE_MARK_RES ),							// GuildMark Create
	DECLARE_PACKET_NAME( TG_GUILD_CHANGE_MARK_RES ),							// GuildMark Change
	DECLARE_PACKET_NAME( TG_GUILD_CHANGE_NAME_RES ),
	DECLARE_PACKET_NAME( TG_GUILD_BANK_END_NFY ),

	DECLARE_PACKET_NAME( TG_BUDOKAI_CHANNEL_STATE_INFO_NFY ),
	DECLARE_PACKET_NAME( TG_BUDOKAI_CHANNEL_UPDATE_STATE ),
	DECLARE_PACKET_NAME( TG_BUDOKAI_CHANNEL_UPDATE_MATCH_STATE ),

	DECLARE_PACKET_NAME( TG_BUDOKAI_TOURNAMENT_INDIVIDUAL_LIST_REQ ),
	DECLARE_PACKET_NAME( TG_BUDOKAI_TOURNAMENT_INDIVIDUAL_INFO_REQ ),
	DECLARE_PACKET_NAME( TG_BUDOKAI_TOURNAMENT_TEAM_LIST_REQ ),
	DECLARE_PACKET_NAME( TG_BUDOKAI_TOURNAMENT_TEAM_INFO_REQ ),

	DECLARE_PACKET_NAME( TG_BUDOKAI_MINOR_MATCH_INDIVIDUAL_LIST_NFY ),
	DECLARE_PACKET_NAME( TG_BUDOKAI_MINOR_MATCH_TEAM_LIST_NFY ),

	DECLARE_PACKET_NAME( TG_BUDOKAI_MINOR_MATCH_TELEPORT_INFO_REQ ),
	DECLARE_PACKET_NAME( TG_BUDOKAI_MINOR_MATCH_TELEPORT_INFO_RES ),

	DECLARE_PACKET_NAME( TG_BUDOKAI_GM_BUDOKAI_SERVER_ENTER_REQ ),
	DECLARE_PACKET_NAME( TG_BUDOKAI_GM_BUDOKAI_SERVER_ENTER_RES ),

	DECLARE_PACKET_NAME( TG_BUDOKAI_PROGRESS_MESSAGE_NFY ),

	DECLARE_PACKET_NAME( TG_CHAR_MARKING_UPDATE_NFY ),
	DECLARE_PACKET_NAME( TG_CHAR_SERVER_TELEPORT ),

	DECLARE_PACKET_NAME( TG_DOJO_CREATED_NFY ),
	DECLARE_PACKET_NAME( TG_DOJO_DESTROYED_NFY ),
	DECLARE_PACKET_NAME( TG_DOJO_SERVER_NFY ),
	DECLARE_PACKET_NAME( TG_DOJO_CREATE_RES ),
	DECLARE_PACKET_NAME( TG_DOJO_DELETE_RES ),	
	DECLARE_PACKET_NAME( TG_DOJO_FUNCTION_ADD_RES ),
	DECLARE_PACKET_NAME( TG_DOGI_CREATE_RES ),
	DECLARE_PACKET_NAME( TG_DOGI_CHANGE_RES ),
	
	DECLARE_PACKET_NAME( TG_CONNECT_VALID_CHECK_RES ),

	DECLARE_PACKET_NAME( TG_DOJO_SCRAMBLE_RES ),
	DECLARE_PACKET_NAME( TG_DOJO_SCRAMBLE_RESPONSE ),
	DECLARE_PACKET_NAME( TG_CONNECT_CHANNEL_CHANGE_RES ),
	DECLARE_PACKET_NAME( TG_DOJO_UPDATE_RES ),

	DECLARE_PACKET_NAME( TG_SEND_SERVER_RELAY_DATA ),

	DECLARE_PACKET_NAME( TG_DOJO_SCRAMBLE_STATE_CHANGE ),
	DECLARE_PACKET_NAME( TG_DOJO_NPC_INFO_RES ),
	DECLARE_PACKET_NAME( TG_DOJO_SEND_TELEPORT_PROPOSAL_NFY ),
	DECLARE_PACKET_NAME( TG_DOJO_COMMAND ),
	DECLARE_PACKET_NAME( TG_DOJO_USERCOUNT_CHANGE ),
	

};


//------------------------------------------------------------------
//
//------------------------------------------------------------------
const char * NtlGetPacketName_TG(WORD wOpCode)
{
	if( wOpCode < TG_OPCODE_BEGIN )
	{
		return "NOT DEFINED PACKET NAME : OPCODE LOW";
	}

	if( wOpCode > TG_OPCODE_END )
	{
		return "NOT DEFINED PACKET NAME : OPCODE HIGH";
	}

	int nIndex = wOpCode - TG_OPCODE_BEGIN;
	if( nIndex >= _countof( s_packetName_TG) )
	{
		return "OPCODE BUFFER OVERFLOW";
	}

	return s_packetName_TG[ nIndex ];
}